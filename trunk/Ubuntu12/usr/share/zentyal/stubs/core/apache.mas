<%doc>
   Template to set the apache configuration file
   for the Web administration

Parameters:

   port - Int the listening port
   group - String the group that must live apache-perl process
   user  - String the user that the apache-perl process must be
   serverroot - String the path to the Apache server root
   tmpdir - String the path to the Apache temporary directory
   debug - String to enable Apache::Reload or not *(Optional)*
           Default value: 'no'
   restrictedResources - Array containing a hash ref structure
                     which contains the following elements:
                - allowedIPs - array ref containing the allowed IPs
                               for accessing this resource
                - name - String the resource name
                - type - String the resource type. Options: file, directory or location.
   includes - Array containing those file includes we want to add
              this Apache configuration

# FIXME: unhardcode paths passing them as args...
</%doc>
<%args>
    $port
    $group
    $user
    $serverroot
    $tmpdir
    $eboxconfdir
    $debug => 'no'
    @restrictedResources => ()
    @includes => ()
</%args>

Timeout 300
KeepAlive Off
MaxKeepAliveRequests 500
KeepAliveTimeout 15
AddDefaultCharset utf-8

PidFile <% $tmpdir %>/apache.pid

<IfModule mpm_prefork_module>
    StartServers             1
    MinSpareServers          1
    MaxSpareServers          1
    MaxClients               1
    MaxRequestsPerChild  10000
</IfModule>

# worker MPM
# StartServers: initial number of server processes to start
# MaxClients: maximum number of simultaneous client connections
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule mpm_worker_module>
    StartServers             1
    MinSpareThreads          1
    MaxSpareThreads          1
    ThreadsPerChild          1
    MaxClients               1
    MaxRequestsPerChild  10000
</IfModule>

PerlInterpMaxRequests 10000

Include /etc/apache2/mods-available/auth_basic.load
Include /etc/apache2/mods-available/authn_file.load
Include /etc/apache2/mods-available/authz_default.load
Include /etc/apache2/mods-available/authz_groupfile.load
Include /etc/apache2/mods-available/authz_host.load
Include /etc/apache2/mods-available/authz_user.load
Include /etc/apache2/mods-available/autoindex.load
Include /etc/apache2/mods-available/cgi.load
Include /etc/apache2/mods-available/deflate.conf
Include /etc/apache2/mods-available/deflate.load
Include /etc/apache2/mods-available/dir.conf
Include /etc/apache2/mods-available/dir.load
Include /etc/apache2/mods-available/env.load
Include /etc/apache2/mods-available/mime.load
Include /etc/apache2/mods-available/negotiation.load
Include /etc/apache2/mods-available/setenvif.load
Include /etc/apache2/mods-available/rewrite.load
Include /etc/apache2/mods-available/ssl.conf
Include /etc/apache2/mods-available/ssl.load
Include /etc/apache2/mods-available/status.load
Include /etc/apache2/mods-available/perl.load

Listen 888
User <% $user %>
Group <% $group %>

ServerAdmin webmaster@localhost
ServerName localhost

DocumentRoot /usr/share/zentyal/www/

<Directory />
    Options SymLinksIfOwnerMatch
    AllowOverride None
</Directory>

<Directory /usr/share/zentyal/www>
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory /var/lib/zentyal/dynamicwww>
    Options Indexes MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<%perl>
if ( @restrictedResources > 0 ) {
    foreach my $restrictedResource (@restrictedResources) {
        my @allowIPs = @{$restrictedResource->{allowedIPs}};
        my $restrictedResourceName = $restrictedResource->{name};
        my $foundNobody = grep { $_ eq 'nobody' } @allowIPs;
        my $foundAll = grep { $_ eq 'all' } @allowIPs;
        my $type = $restrictedResource->{type};
        if ( $type eq 'file' ) {
           $type = 'Files';
        } elsif ( $type eq 'dir' ) {
           $type = 'Directory';
        } elsif ( $type eq 'location' ) {
           $type = 'Location';
        }
</%perl>
<<% $type %> <% $restrictedResourceName %>>
    Order Allow,Deny
%        unless ( $foundNobody ) {
%            foreach my $ip (@allowIPs) {
    Allow from <% $ip %>
%            }
%        }
</<% $type %>>
%   }
% }

% foreach my $includeFile (@includes) {
Include <% $includeFile %>
% }

UseCanonicalName Off
TypesConfig /etc/mime.types
DefaultType text/plain

<IfModule mod_mime_magic.c>
    MIMEMagicFile /usr/share/misc/file/magic.mime
</IfModule>

HostnameLookups Off

ErrorLog /var/log/zentyal/error.log
LogLevel warn

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{forensic-id}n\"" combined

CustomLog /var/log/zentyal/access.log combined

<IfModule mod_backtrace.c>
    EnableExceptionHook On
</IfModule>

<IfModule mod_whatkilledus.c>
    EnableExceptionHook On
</IfModule>

ServerSignature Off
ServerTokens Min

<IfModule mod_ssl.c>
    SSLEngine on
    SSLProtocol all
    SSLCipherSuite HIGH:MEDIUM
    SSLCertificateFile /var/lib/zentyal/conf/ssl/ssl.pem
    SSLCACertificatePath <% $eboxconfdir %>ssl-ca/
</IfModule>

<IfModule mod_setenvif.c>
    BrowserMatch "Mozilla/2" nokeepalive
    BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0
    BrowserMatch "RealPlayer 4\.0" force-response-1.0
    BrowserMatch "Java/1\.0" force-response-1.0
    BrowserMatch "JDK/1\.0" force-response-1.0
</IfModule>

% if ($debug eq 'yes') {
# Yes, this is useless right now.
#PerlInitHandler	Apache2::Reload
% }
PerlWarn On

PerlModule EBox::Auth
PerlSetVar EBoxPath /
PerlSetVar EBoxLoginScript /Login/Index
PerlSetVar EBoxSatisfy Any
# FIXME: disabled to avoid error after upgrade (apache restart)
#PerlSetVar EBoxCookieName Zentyal
PerlSetVar AuthCookieDebug 0

<Files LOGIN>
	AuthType EBox::Auth
	AuthName EBox
	SetHandler perl-script
	PerlHandler EBox::Auth->login
</Files>

<Directory /usr/share/zentyal/cgi/>
    <IfModule mod_ssl.c>
        SSLOptions +StdEnvVars
    </IfModule>

    AuthType EBox::Auth
    AuthName EBox
    PerlAuthenHandler EBox::Auth->authenticate
    PerlAuthzHandler  EBox::Auth->authorize
    require valid-user
    SetHandler perl-script
    PerlHandler ModPerl::Registry
    PerlSendHeader On
    AllowOverride None
    Options +ExecCGI
    Order allow,deny
    Allow from all
</Directory>

RewriteEngine On

# Compatibility with old URLs (permanent redirects)
RewriteRule ^/ebox(.*) /$1
RewriteRule ^/zentyal(.*) /$1
# skip rewrites for favicon and login
RewriteCond %{REQUEST_FILENAME} ^/favicon.ico$ [OR]
RewriteCond %{REQUEST_FILENAME} ^/LOGIN$ [OR]
RewriteCond %{REQUEST_FILENAME} ^/slave$
RewriteRule .? - [S=100]
# Map /ebox.cgi to the right Perl CGI and redirect
RewriteRule ^/ebox.cgi$ /
# From /data/ to / and finish
RewriteRule ^/data(.*) $1 [L]
# From /dynamic-data/ to the right directory in FS and finish
RewriteRule ^/dynamic-data(.*) /var/lib/zentyal/dynamicwww$1 [L]
RewriteRule ^/(.*) /usr/share/zentyal/cgi/ebox.cgi [E=script:$1,L]
